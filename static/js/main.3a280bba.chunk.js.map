{"version":3,"sources":["components/User/User.js","constants/prototypes.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["User","PropTypes","arrayOf","object","isRequired","shape","id","number","title","string","body","user","comments","array","name","email","street","suite","city","zipcode","_ref","address","react_default","a","createElement","className","href","src","alt","concat","Comment","comment","components_User_User","CommentList","map","components_Comment_Comment","key","Post","post","components_CommentList_CommentList","PostList","posts","components_Post_Post","BASE_URL","App","state","originalPosts","isLoaded","isLoading","hasError","loadPosts","_callee","_ref2","_ref3","postsResponse","usersResponse","commentsResponse","users","postsWithComments","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","fetch","sent","Object","slicedToArray","json","_objectSpread","find","userId","filter","postId","t0","stop","handleSearchChange","event","value","target","toConsumableArray","includes","_this$state","this","Fragment","type","placeholder","onChange","components_PostList_PostList","onClick","disabled","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"0bAwBeA,GCrBNC,IAAUC,QAAQD,IAAUE,QAAQC,WAIrCH,IAAUI,MAAM,CACpBC,GAAIL,IAAUM,OACdC,MAAOP,IAAUQ,OACjBC,KAAMT,IAAUQ,OAChBE,KAAMV,IAAUE,OAChBS,SAAUX,IAAUY,QACnBT,WAIOH,IAAUC,QAAQD,IAAUE,QAAQC,WAIrCH,IAAUI,MAAM,CACvBS,KAAMb,IAAUQ,OAChBM,MAAOd,IAAUQ,OACjBC,KAAMT,IAAUQ,SACfL,WAIGH,IAAUQ,OAAOL,WAChBH,IAAUQ,OAAOL,WACfH,IAAUI,MAAM,CACvBW,OAAQf,IAAUQ,OAClBQ,MAAOhB,IAAUQ,OACjBS,KAAMjB,IAAUQ,OAChBU,QAASlB,IAAUQ,SD/BV,SAAAW,GAAA,IAAGN,EAAHM,EAAGN,KAAMC,EAATK,EAASL,MAAOM,EAAhBD,EAAgBC,QAAhB,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYC,KAAK,MAC5BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYE,IAAI,yBAAyBC,IAAI,cAC3Dd,GAEHQ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACVV,GAEFM,GACCC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,GAAAI,OACMR,EAAQL,OADd,MAAAa,OACyBR,EAAQJ,MADjC,eAAAY,OAEIR,EAAQH,KAFZ,MAAAW,OAEqBR,EAAQF,aEIpBW,SAfC,SAAAV,GAAiB,IAAdW,EAAcX,EAAdW,QACTjB,EAAsBiB,EAAtBjB,KAAMC,EAAgBgB,EAAhBhB,MAAOL,EAASqB,EAATrB,KAErB,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACQ,EAAD,CAAMlB,KAAMA,EAAMC,MAAOA,IACzBO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACVf,MCIMuB,SAXK,SAAAb,GAAA,IAAGR,EAAHQ,EAAGR,SAAH,OAClBU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,aACCb,EAASsB,IAAI,SAAAH,GAAO,OACnBT,EAAAC,EAAAC,cAACW,EAAD,CAASJ,QAASA,EAASK,IAAKL,EAAQzB,UCY/B+B,EAfF,SAAAjB,GAAc,IAAXkB,EAAWlB,EAAXkB,KACN3B,EAAmB2B,EAAnB3B,KAAMC,EAAa0B,EAAb1B,SAEd,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAca,EAAK9B,OACjCc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaa,EAAK5B,MAC/BY,EAAAC,EAAAC,cAACQ,EAAD,CAAMlB,KAAMH,EAAKG,KAAMC,MAAOJ,EAAKI,MAAOM,QAASV,EAAKU,UACxDC,EAAAC,EAAAC,cAACe,EAAD,CAAa3B,SAAUA,MCCd4B,EAVE,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,MAAH,OACfnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZgB,EAAMP,IAAI,SAAAI,GAAI,OACbhB,EAAAC,EAAAC,cAACkB,EAAD,CAAMJ,KAAMA,EAAMF,IAAKE,EAAKhC,4jBCJlC,IAAMqC,EAAW,uCA4GFC,6MAzGbC,MAAQ,CACNJ,MAAO,GACPK,cAAe,GACfC,UAAU,EACVC,WAAW,EACXC,UAAU,KAGZC,+BAAY,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAf,EAAAgB,EAAA7C,EAAA8C,EAAA,OAAAC,EAAApC,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVC,EAAKC,SAAS,CACZjB,WAAW,EACXC,UAAU,IAHFY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWEG,QAAQC,IAAI,CACpBC,MAAK,GAAAvC,OAAIc,EAAJ,WACLyB,MAAK,GAAAvC,OAAIc,EAAJ,WACLyB,MAAK,GAAAvC,OAAIc,EAAJ,gBAdC,cAAAS,EAAAS,EAAAQ,KAAAhB,EAAAiB,OAAAC,EAAA,EAAAD,CAAAlB,EAAA,GAQNE,EARMD,EAAA,GASNE,EATMF,EAAA,GAUNG,EAVMH,EAAA,GAAAQ,EAAAE,KAAA,GAiBYT,EAAckB,OAjB1B,eAiBF/B,EAjBEoB,EAAAQ,KAAAR,EAAAE,KAAA,GAkBYR,EAAciB,OAlB1B,eAkBFf,EAlBEI,EAAAQ,KAAAR,EAAAE,KAAA,GAmBeP,EAAiBgB,OAnBhC,QAmBF5D,EAnBEiD,EAAAQ,KAoBFX,EAAoBjB,EAAMP,IAAI,SAAAI,GAAI,OAAAmC,EAAA,GACnCnC,EADmC,CAEtC3B,KAAM8C,EAAMiB,KAAK,SAAA/D,GAAI,OAAIA,EAAKL,KAAOgC,EAAKqC,SAC1C/D,SAAUA,EAASgE,OAAO,SAAA7C,GAAO,OAAIA,EAAQ8C,SAAWvC,EAAKhC,SAG/D0D,EAAKC,SAAS,CACZxB,MAAOiB,EACPZ,cAAeY,EACfX,UAAU,IA7BJc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAgCRG,EAAKC,SAAS,CACZhB,UAAU,IAjCJ,QAqCVe,EAAKC,SAAS,CACZjB,WAAW,IAtCH,yBAAAa,EAAAkB,SAAA5B,EAAA,oBA0CZ6B,mBAAqB,SAACC,GAAU,IACtBnC,EAAkBkB,EAAKnB,MAAvBC,cACAoC,EAAUD,EAAME,OAAhBD,MAERlB,EAAKC,SAAS,CACZxB,MAAO6B,OAAAc,EAAA,EAAAd,CAAIxB,GAAe8B,OAAO,SAAAtC,GAAI,OACnCA,EAAK9B,MAAM6E,SAASH,IAAU5C,EAAK5B,KAAK2E,SAASH,gFAK9C,IAAAI,EAMHC,KAAK1C,MAJPJ,EAFK6C,EAEL7C,MACAM,EAHKuC,EAGLvC,SACAC,EAJKsC,EAILtC,UACAC,EALKqC,EAKLrC,SAGF,OACE3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,KACElE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,yBACCsB,EACCzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,KACElE,EAAAC,EAAAC,cAAA,SACEiE,KAAK,OACL3E,KAAK,eACL4E,YAAY,YACZjE,UAAU,SACVkE,SAAUJ,KAAKP,qBAEjB1D,EAAAC,EAAAC,cAACoE,EAAD,CAAUnD,MAAOA,KAGnBnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,KACGvC,GACC3B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,+CAIFH,EAAAC,EAAAC,cAAA,UACEiE,KAAK,SACLhE,UAAU,cACVoE,QAASN,KAAKrC,UACd4C,SAAU9C,GAETA,EAAY,aAAe,uBAjGxB+C,IAAMC,WCDxBC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3a280bba.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport { UserPropTypes } from '../../constants/prototypes';\n\nconst User = ({ name, email, address }) => (\n  <div className=\"user\">\n    <a className=\"user-name\" href=\"/ \">\n      <img className=\"user-icon\" src=\"./images/user-icon.png\" alt=\"user-ipon\" />\n      {name}\n    </a>\n    <p className=\"user-email\">\n      {email}\n    </p>\n    {address && (\n      <p className=\"user-address\">\n        {`${address.street}, ${address.suite},\n        ${address.city}, ${address.zipcode}`}\n      </p>\n    )}\n  </div>\n);\n\nUser.propTypes = UserPropTypes;\n\nexport default User;\n","import PropTypes from 'prop-types';\n\nexport const PostListPropTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport const PostPropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.array,\n  }).isRequired,\n};\n\nexport const CommentListPropTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport const CommentPropTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport const UserPropTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport './Comment.css';\nimport User from '../User/User';\nimport { CommentPropTypes } from '../../constants/prototypes';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"comment\">\n      <User name={name} email={email} />\n      <p className=\"comment-text\">\n        {body}\n      </p>\n    </div>\n  );\n};\n\nComment.propTypes = CommentPropTypes;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport './CommentList.css';\nimport { CommentListPropTypes } from '../../constants/prototypes';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comments\">\n    <h3 className=\"comments-heading\">Comments:</h3>\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = CommentListPropTypes;\n\nexport default CommentList;\n","import React from 'react';\nimport './Post.css';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\nimport { PostPropTypes } from '../../constants/prototypes';\n\nconst Post = ({ post }) => {\n  const { user, comments } = post;\n\n  return (\n    <div className=\"post\">\n      <h2 className=\"post-title\">{post.title}</h2>\n      <p className=\"post-text\">{post.body}</p>\n      <User name={user.name} email={user.email} address={user.address} />\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n\nPost.propTypes = PostPropTypes;\n\nexport default Post;\n","import React from 'react';\nimport './PostList.css';\nimport Post from '../Post/Post';\nimport { PostListPropTypes } from '../../constants/prototypes';\n\nconst PostList = ({ posts }) => (\n  <div className=\"container\">\n    {posts.map(post => (\n      <Post post={post} key={post.id} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = PostListPropTypes;\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList/PostList';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    originalPosts: [],\n    isLoaded: false,\n    isLoading: false,\n    hasError: false,\n  };\n\n  loadPosts = async () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    try {\n      const [\n        postsResponse,\n        usersResponse,\n        commentsResponse,\n      ] = await Promise.all([\n        fetch(`${BASE_URL}/posts`),\n        fetch(`${BASE_URL}/users`),\n        fetch(`${BASE_URL}/comments`),\n      ]);\n\n      const posts = await postsResponse.json();\n      const users = await usersResponse.json();\n      const comments = await commentsResponse.json();\n      const postsWithComments = posts.map(post => ({\n        ...post,\n        user: users.find(user => user.id === post.userId),\n        comments: comments.filter(comment => comment.postId === post.id),\n      }));\n\n      this.setState({\n        posts: postsWithComments,\n        originalPosts: postsWithComments,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true,\n      });\n    }\n\n    this.setState({\n      isLoading: false,\n    });\n  };\n\n  handleSearchChange = (event) => {\n    const { originalPosts } = this.state;\n    const { value } = event.target;\n\n    this.setState({\n      posts: [...originalPosts].filter(post => (\n        post.title.includes(value) || post.body.includes(value)\n      )),\n    });\n  };\n\n  render() {\n    const {\n      posts,\n      isLoaded,\n      isLoading,\n      hasError,\n    } = this.state;\n\n    return (\n      <>\n        <h1 className=\"heading\">Dynamic list of todos</h1>\n        {isLoaded ? (\n          <>\n            <input\n              type=\"text\"\n              name=\"search-input\"\n              placeholder=\"Search...\"\n              className=\"search\"\n              onChange={this.handleSearchChange}\n            />\n            <PostList posts={posts} />\n          </>\n        ) : (\n          <>\n            {hasError && (\n              <h2 className=\"error-title\">\n                Oh, something went wrong! Please, try again\n              </h2>\n            )}\n            <button\n              type=\"button\"\n              className=\"load-button\"\n              onClick={this.loadPosts}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Loading...' : 'Load posts'}\n            </button>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}